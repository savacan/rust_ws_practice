version: "3.5"

services:
  unit-test-mysql:
    image: mysql/mysql-server:5.7.28
    volumes:
      - ./db/schema:/docker-entrypoint-initdb.d
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test_db
      MYSQL_ROOT_HOST: '%'
    ports:
      - "13307:3306"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci

  mysql:
    image: mysql/mysql-server:5.7.28
    volumes:
      - ./db/schema:/docker-entrypoint-initdb.d
      - mysql-db:/var/lib/mysql
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test_db
      MYSQL_ROOT_HOST: '%'
    ports:
      - "13306:3306"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci

  ws_app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    env_file:
      - ./app/.env
    environment:
      DATABASE_URL: mysql://root:password@mysql:3306/test_db
      RUST_BACKTRACE: 1
      RUST_LOG: "info,sqlx=warn"
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    volumes:
      - ./app:/app
      - cargo-cache:/usr/local/cargo/registry
      - target-cache:/app/target
    tty: true
    command: /bin/sh -c "wait-for-it mysql:3306 -- cargo watch -x 'run --bin ws'"

  mysql-migration:
    build:
      context: ./db
      target: production
    environment:
      DATABASE_URL: mysql://root:password@mysql:3306/test_db
    volumes:
      - ./db:/app
    command: tail -f /dev/null

volumes:
  cargo-cache: null
  target-cache: null
  mysql-db: null
